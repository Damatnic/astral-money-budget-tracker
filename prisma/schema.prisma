// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  balance   Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  budgets Budget[]
  bills   Bill[]
  transactions Transaction[]

  @@map("users")
}

model Budget {
  id        String   @id @default(cuid())
  userId    String
  month     String   // e.g., "october-2025"
  year      Int
  income    Float    @default(0)
  expenses  Float    @default(0)
  savings   Float    @default(0)
  balance   Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  bills Bill[]

  @@unique([userId, month, year])
  @@map("budgets")
}

model Bill {
  id          String   @id @default(cuid())
  userId      String
  budgetId    String?
  name        String
  amount      Float
  dueDate     DateTime
  category    String   // e.g., "utilities", "insurance", "entertainment"
  isRecurring Boolean  @default(false)
  isPaid      Boolean  @default(false)
  isIncome    Boolean  @default(false)
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  budget Budget? @relation(fields: [budgetId], references: [id], onDelete: SetNull)

  @@map("bills")
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  type        String   // "income" or "expense"
  amount      Float
  description String?
  category    String?
  date        DateTime
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model FinancialGoal {
  id          String   @id @default(cuid())
  userId      String
  title       String
  targetAmount Float
  currentAmount Float   @default(0)
  deadline    DateTime?
  category    String   // e.g., "emergency", "savings", "debt"
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("financial_goals")
}

model RecurringBill {
  id        String   @id @default(cuid())
  name      String
  amount    Float
  frequency String   // "monthly", "weekly", "biweekly"
  category  String
  startDate DateTime
  endDate   DateTime?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("recurring_bills")
}